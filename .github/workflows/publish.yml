name: Publish hosby-cli to npm

on:
  pull_request:
    branches:
      - main
    types: [closed]

jobs:
  # Job 1: Verify the code quality and run tests
  verify:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run checks
        run: npm run check

      - name: Run tests
        run: npm test

  # Job 2: Build the project
  build:
    needs: verify
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/
          retention-days: 1

  # Job 3: Version management
  version:
    needs: build
    runs-on: ubuntu-latest
    outputs:
      new_version: ${{ steps.bump_version.outputs.new_version }}
      bump_type: ${{ steps.version_bump.outputs.bump_type }}
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: Find version bump type
        id: version_bump
        run: |
          # Get PR title or merge commit message
          if [ "${{ github.event.pull_request.title }}" != "" ]; then
            COMMIT_MSG="${{ github.event.pull_request.title }}"
            echo "Using PR title: $COMMIT_MSG"
          else
            COMMIT_MSG=$(git log -1 --pretty=%B)
            echo "Using commit message: $COMMIT_MSG"
          fi
          
          # Determine bump type based on message
          if echo "$COMMIT_MSG" | grep -qE "BREAKING CHANGE|major:"; then
            echo "bump_type=major" >> $GITHUB_OUTPUT
            echo "Version bump: MAJOR"
          elif echo "$COMMIT_MSG" | grep -qE "feat:|feature:|minor:"; then
            echo "bump_type=minor" >> $GITHUB_OUTPUT
            echo "Version bump: MINOR"
          else
            echo "bump_type=patch" >> $GITHUB_OUTPUT
            echo "Version bump: PATCH"
          fi

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Bump version
        id: bump_version
        run: |
          BUMP_TYPE="${{ steps.version_bump.outputs.bump_type }}"
          echo "Bumping version with type: $BUMP_TYPE"
          npm version $BUMP_TYPE --no-git-tag-version
          
          # Get new version
          NEW_VERSION=$(node -p "require('./package.json').version")
          echo "New version: $NEW_VERSION"
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT

      - name: Commit version bump
        run: |
          git add package.json
          git commit -m "chore: bump version to v${{ steps.bump_version.outputs.new_version }} [skip ci]"
          git tag "v${{ steps.bump_version.outputs.new_version }}"

      - name: Push changes and tags
        run: |
          git push origin main
          git push origin "v${{ steps.bump_version.outputs.new_version }}"

  # Job 4: Publish to npm
  publish-npm:
    needs: version
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: "https://registry.npmjs.org"

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/

      - name: Install dependencies
        run: npm ci

      - name: Publish to npm
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  # Job 5: Create GitHub Release
  create-release:
    needs: [version, publish-npm]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "v${{ needs.version.outputs.new_version }}"
          release_name: "Release v${{ needs.version.outputs.new_version }}"
          body: |
            ## Changes in v${{ needs.version.outputs.new_version }}
            
            Version bump type: ${{ needs.version.outputs.bump_type }}
            
            Auto-generated release from PR: ${{ github.event.pull_request.title }}
            
            **Full Changelog**: https://github.com/${{ github.repository }}/commits/v${{ needs.version.outputs.new_version }}
          draft: false
          prerelease: false